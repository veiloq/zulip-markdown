name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test -v ./...
        
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Setup GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
          
      - name: Create release notes
        run: |
          echo "**ZLMD - Zulip Markdown Library** ${{ steps.get_version.outputs.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "A Go library for working with Zulip-flavored Markdown." >> release_notes.md
          echo "" >> release_notes.md
          echo "### Installation" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "go get github.com/veiloq/zlmd@${{ steps.get_version.outputs.VERSION }}" >> release_notes.md
          echo '```' >> release_notes.md
          echo "" >> release_notes.md
          echo "For full details, see the [README](https://github.com/veiloq/zlmd/blob/main/README.md)." >> release_notes.md
      
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.get_version.outputs.VERSION }} \
            --title "ZLMD ${{ steps.get_version.outputs.VERSION }}" \
            --notes-file release_notes.md 